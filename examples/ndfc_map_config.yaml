# ndfc_map_config.yaml

# This section defines the different YAML files to be generated.
# The 'name_template' allows for dynamic filenames using Jinja2-like syntax.
# The values inside {{ }} will be extracted from the input JSON.
output_files:
  - #############################
    ### GLOBAL CONFIGURATION ####
    #############################
    name_template: "host_vars/{{ fabricName }}/global.nac.yaml"
    description: "Global configuration for fabric"
    mappings:
      # Mapping for vxlan.fabric.name
      - source_json_path: "$.fabricName"
        target_yaml_path: "vxlan.fabric.name"

      # Mapping for vxlan.fabric.type
      - source_json_path: "$.fabricTechnologyFriendly"
        target_yaml_path: "vxlan.fabric.type"
        transformations:
          # Replace spaces with underscores
          - type: "replace_string"
            from: " "
            to: "_"

      # Mapping for vxlan.global.bgp_asn
      # The input JSON has "asn": "*****", but the desired output is "65001".
      # This transformation maps a specific input value to a desired output value.
      - source_json_path: "$.asn"
        target_yaml_path: "vxlan.global.bgp_asn"
        transformations:
          - type: "map_value"
            mapping:
              "*****": "65001" # If the input 'asn' is "*****", set output to "65001"
            default: "{{ value }}" # Otherwise, use the original value (or specify another default)

      # Mapping for vxlan.global.route_reflectors
      - source_json_path: "$.nvPairs.RR_COUNT"
        target_yaml_path: "vxlan.global.route_reflectors"
        transformations:
          - type: "to_integer"
          
      # Mapping for vxlan.global.anycast_gateway_mac
      - source_json_path: "$.nvPairs.ANYCAST_GW_MAC"
        target_yaml_path: "vxlan.global.anycast_gateway_mac"
        transformations:
          - type: "to_lowercase"
      
      # Mapping for vxlan.global.layer2_vni_range
      - source_json_path: "$.nvPairs.L2_SEGMENT_ID_RANGE"
        target_yaml_path: "vxlan.global.layer2_vni_range"
        transformations:
          - type: "to_lowercase"
          - type: "split_range"

      # Mapping for vxlan.global.layer3_vni_range
      - source_json_path: "$.nvPairs.L3_PARTITION_ID_RANGE"
        target_yaml_path: "vxlan.global.layer3_vni_range"
        transformations:
          - type: "to_lowercase"
          - type: "split_range"
      
      # Mapping for vxlan.global.layer2_vlan_range
      - source_json_path: "$.nvPairs.NETWORK_VLAN_RANGE"
        target_yaml_path: "vxlan.global.layer2_vlan_range"
        transformations:
          - type: "to_lowercase"
          - type: "split_range"

      # Mapping for vxlan.global.layer3_vlan_range
      - source_json_path: "$.nvPairs.VRF_VLAN_RANGE"
        target_yaml_path: "vxlan.global.layer3_vlan_range"
        transformations:
          - type: "to_lowercase"
          - type: "split_range"
      #######################
      ### Mapping for VPC ###
      #######################
      # Mapping for vxlan.global.vpc.peer_link_vlan
      - source_json_path: "$.nvPairs.VPC_PEER_LINK_VLAN"
        target_yaml_path: "vxlan.global.vpc.peer_link_vlan"
        transformations:
          - type: "to_integer"

      # Mapping for vxlan.global.vpc.peer_keep_alive
      - source_json_path: "$.nvPairs.VPC_PEER_KEEP_ALIVE_OPTION"
        target_yaml_path: "vxlan.global.vpc.peer_keep_alive"
        transformations:
          - type: "to_lowercase"

      # Mapping for vxlan.global.vpc.auto_recovery_time
      - source_json_path: "$.nvPairs.VPC_AUTO_RECOVERY_TIME"
        target_yaml_path: "vxlan.global.vpc.auto_recovery_time"
        transformations:
          - type: "to_integer"

      # Mapping for vxlan.global.vpc.delay_restore_time
      - source_json_path: "$.nvPairs.VPC_DELAY_RESTORE_TIME"
        target_yaml_path: "vxlan.global.vpc.delay_restore_time"
        transformations:
          - type: "to_integer"

      # Mapping for vxlan.global.vpc.peer_link_port_channel_id
      - source_json_path: "$.nvPairs.VPC_PEER_LINK_PO"
        target_yaml_path: "vxlan.global.vpc.peer_link_port_channel_id"
        transformations:
          - type: "to_integer"

      # Mapping for vxlan.global.vpc.ipv6_nd_sync
      - source_json_path: "$.nvPairs.VPC_ENABLE_IPv6_ND_SYNC"
        target_yaml_path: "vxlan.global.vpc.ipv6_nd_sync"
        transformations:
          - type: "to_boolean"

      # Mapping for vxlan.global.vpc.advertise_pip
      - source_json_path: "$.nvPairs.ADVERTISE_PIP_BGP"
        target_yaml_path: "vxlan.global.vpc.advertise_pip"
        transformations:
          - type: "to_boolean"

      # Mapping for vxlan.global.vpc.advertise_pip_border_only
      - source_json_path: "$.nvPairs.ADVERTISE_PIP_ON_BORDER"
        target_yaml_path: "vxlan.global.vpc.advertise_pip_border_only"
        transformations:
          - type: "to_boolean"

      # Mapping for vxlan.global.vpc.domain_id_range
      - source_json_path: "$.nvPairs.VPC_DOMAIN_ID_RANGE"
        target_yaml_path: "vxlan.global.vpc.domain_id_range"
        transformations:
          - type: "to_lowercase"

      # Mapping for vxlan.global.vpc.fabric_vpc_qos
      - source_json_path: "$.nvPairs.FABRIC_VPC_QOS"
        target_yaml_path: "vxlan.global.vpc.fabric_vpc_qos"
        transformations:
          - type: "to_boolean"

      # Mapping for vxlan.global.vpc.fabric_vpc_qos_policy_name
      - source_json_path: "$.nvPairs.FABRIC_VPC_QOS_POLICY_NAME"
        target_yaml_path: "vxlan.global.vpc.fabric_vpc_qos_policy_name"
        transformations:
          - type: "to_lowercase"

    ###############################
    ### UNDERLAY CONFIGURATION ####
    ############################### 
  - name_template: "host_vars/{{ fabricName }}/underlay.nac.yaml"
    description: "Underlay configuration for fabric"
    mappings:
      ###########################
      ### Mapping for GENERAL ###
      ###########################
      # Mapping for vxlan.underlay.general.routing_protocol
      - source_json_path: "$.nvPairs.LINK_STATE_ROUTING"
        target_yaml_path: "vxlan.underlay.general.routing_protocol"
        transformations:
          - type: "to_lowercase"
      
      # Mapping for vxlan.underlay.general.enable_ipv6_underlay
      - source_json_path: "$.nvPairs.UNDERLAY_IS_V6"
        target_yaml_path: "vxlan.underlay.general.enable_ipv6_underlay"
        transformations:
          - type: "to_boolean"

      # Mapping for vxlan.underlay.general.replication_mode
      - source_json_path: "$.replicationMode"
        target_yaml_path: "vxlan.underlay.general.replication_mode"
        transformations:
          - type: "to_lowercase"