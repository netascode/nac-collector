name: Update Endpoint Definitions

on:
  # Run daily at 2 AM UTC
  schedule:
    - cron: '0 2 * * *'
  
  # Allow manual trigger
  workflow_dispatch:
    inputs:
      solutions:
        description: 'Comma-separated list of solutions to update (leave empty for all)'
        required: false
        default: ''
        type: string

permissions:
  contents: write
  pull-requests: write

jobs:
  update-endpoints:
    name: Update Endpoint Files
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0  # Fetch all history for proper diffing

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true

      - name: Set up Python
        run: uv python install 3.13

      - name: Install Dependencies
        run: uv sync

      - name: Run Update Script
        id: update
        run: |
          echo "Starting endpoint update process..."
          
          # Run the update script and capture output
          if uv run python scripts/update_endpoints.py; then
            echo "update_status=success" >> $GITHUB_OUTPUT
          else
            echo "update_status=failed" >> $GITHUB_OUTPUT
            exit 1
          fi

      - name: Check for Changes
        id: check_changes
        run: |
          # Check if there are any changes to the endpoint files
          if git diff --quiet nac_collector/resources/endpoints/*.yaml; then
            echo "No changes detected in endpoint files"
            echo "has_changes=false" >> $GITHUB_OUTPUT
          else
            echo "has_changes=true" >> $GITHUB_OUTPUT
            
            echo "## 📝 Changes detected in endpoint files:"
            echo ""
            
            # Get list of changed files for PR description
            CHANGED_FILES=$(git diff --name-only nac_collector/resources/endpoints/*.yaml | xargs -I {} basename {} | tr '\n' ',' | sed 's/,$//')
            echo "changed_files=${CHANGED_FILES}" >> $GITHUB_OUTPUT
            
            # Show which files changed
            echo "### Modified files:"
            git diff --name-only nac_collector/resources/endpoints/*.yaml | while read file; do
              echo "- $(basename $file)"
            done
            echo ""
            
            # Show summary statistics for each file
            echo "### Change statistics:"
            git diff --stat nac_collector/resources/endpoints/*.yaml
            echo ""
            
            # Show detailed changes for each file
            echo "### Detailed changes:"
            for file in $(git diff --name-only nac_collector/resources/endpoints/*.yaml); do
              echo ""
              echo "#### $(basename $file):"
              # Show number of additions and deletions
              STATS=$(git diff --numstat $file)
              ADDED=$(echo $STATS | awk '{print $1}')
              DELETED=$(echo $STATS | awk '{print $2}')
              echo "- Lines added: $ADDED"
              echo "- Lines removed: $DELETED"
              
              # Show a brief summary of what changed (first 10 lines of diff)
              echo "- Preview of changes:"
              echo '```diff'
              git diff --no-index --no-prefix $file | head -20 || true
              echo '```'
            done
          fi

      - name: Create Pull Request
        if: steps.check_changes.outputs.has_changes == 'true'
        id: create_pr
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: |
            Update endpoint definitions from terraform providers
            
            Automated update of endpoint definition files from the latest
            terraform provider repositories.
            
            Updated files: ${{ steps.check_changes.outputs.changed_files }}
          branch: automated/update-endpoints-${{ github.run_number }}
          delete-branch: true
          title: 'Update endpoint definitions from terraform providers'
          body: |
            ## 🤖 Automated Endpoint Update
            
            This PR contains automated updates to the endpoint definition files fetched from the respective Terraform provider repositories.
            
            ### 📝 Changed Files
            - ${{ steps.check_changes.outputs.changed_files }}
            
            ### 🔄 Update Process
            - Fetched latest definitions from GitHub terraform provider repos
            - Processed and formatted endpoint data
            - Updated packaged endpoint YAML files
            
            ### ✅ Auto-Merge
            - This PR will be automatically merged once all tests pass
            - If tests fail, manual review is required
            
            ---
            *This PR was automatically generated by the [Update Endpoint Definitions workflow](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})*
          labels: |
            dependencies
            automated
          assignees: ''
          reviewers: ''

      - name: Enable Auto-Merge
        if: steps.create_pr.outputs.pull-request-number
        run: |
          echo "Enabling auto-merge for PR #${{ steps.create_pr.outputs.pull-request-number }}"
          gh pr merge ${{ steps.create_pr.outputs.pull-request-number }} --auto --squash
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  notification:
    name: Workflow Notification
    if: always()
    needs: [update-endpoints]
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - name: Determine Status
        run: |
          if [ "${{ needs.update-endpoints.result }}" == "success" ]; then
            echo "Endpoint update workflow completed successfully"
            echo "status_emoji=✅" >> $GITHUB_ENV
            echo "status_text=Success" >> $GITHUB_ENV
          else
            echo "Endpoint update workflow failed"
            echo "status_emoji=❌" >> $GITHUB_ENV
            echo "status_text=Failed" >> $GITHUB_ENV
          fi

      - name: Send Notification
        if: failure()  # Only notify on failure to avoid spam
        uses: qsnyder/action-wxt@master
        env:
          TOKEN: ${{ secrets.WEBEX_TOKEN }}
          ROOMID: ${{ secrets.WEBEX_ROOM_ID }}
          MESSAGE: |
            **${{ env.status_emoji }} Endpoint Update Workflow - ${{ env.status_text }}**
            
            Repository: ${{ github.repository }}
            Workflow Run: [#${{ github.run_number }}](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
            Triggered by: ${{ github.event_name }}
            
            Status: ${{ needs.update-endpoints.result }}